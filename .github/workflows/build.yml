cache: &cache
  - name: Get yarn cache directory path
    id: yarn-cache-dir-path
    run: echo "::set-output name=dir::$(yarn cache dir)"
  - uses: actions/cache@v3
    id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    with:
      path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      restore-keys: |
            ${{ runner.os }}-yarn-

name: "Build, Test and Lint"

on:
  workflow_call:
    inputs:
      working_dir:
        required: true
        type: string

concurrency:
  group: ${GITHUB_REF#refs/heads/}
  cancel-in-progress: true

jobs:
  install:
    name: "Install deps"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install --prefer-offline --frozen-lockfile
        working-directory: ${{ inputs.working_dir }}
      <<: *cache

  build:
    name: "Build"
    runs-on: ubuntu-latest
    needs: install
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Checkout
        uses: actions/checkout@v2
      <<: *cache
      - name: Unit Test
        run: yarn build
        working-directory: ${{ inputs.working_dir }}

  test:
    name: "Test"
    runs-on: ubuntu-latest
    needs: install
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Checkout
        uses: actions/checkout@v2
      <<: *cache
      - name: Unit Test
        run: yarn test
        working-directory: ${{ inputs.working_dir }}
